<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADKGwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAG5FJ
        REFUeNrt3cly5EhyBuA/Amsi95Vs6TAHyeY0N8lkev+n0Flm6i7mvmNH6ABmTXV1FYtMIgFP8v+u3axE
        LnDE4uEOEBERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERCaP+9re/maYv
        goiaoZu+ACJqDgMA0SfGAED0iTEAEH1iDABEnxgDANEnxgBA9IkxABB9YgwARJ8YAwDRJ8YAQPSJ2XW/
        oFIKSik4jgPLspp+//SdPMuRpAmMuf6IiFIKtu3Atm0o9df/XuQFClO8+d+1tAWl//oPGgOkaYIsyxr9
        7OpQfrb282erfvn/F0WBovj5Z11rAFBKodPpYDKZwrGdOl+aXqkwBdbrNVar5at+YN/TSmMwHGI0HEHr
        egaYSilEUYT5/Ann8HzVdUunlEKr1cJwOELQCip7j7UHgNFoDN/z63xZegNtNOwrR2bGGLTaAQaDARyn
        3gDvOA70Bx1Raq3R6/YwHk/gum6l/3atAcCyLHiuV+dL0hWKK4f/Sil4nlv7d6yUQp7nLw5175Vt2xgO
        hxgORjeZMtcaAFzXxQccnX0oWZYhSZKr/tbSFlzHg1LqXWsI1153nn+sNQDf9zEajdDr9aFwmxun9gCA
        G70Rer/LkzRJ4jfPMY0xsB278iHqayVJjCzLPsT8/7JWNhqO0W63bxpMawsASim4rvchvqCP7D0jANsu
        A0DdT/+iKJAkCfI8v/vfl2VZ6Pf6GI3GcBzn5p9lrSMAjwFAtKIokGbp1TeSbTu1L/4BQJqmSLO09tet
        muu6GA6GGAyGte2g1DoCaOLHQa9XFAWSOL7qby3Lguu4tc//lVJlAEjvOwC0gzaGwxE6nU6tD8naAoDr
        urVFNbpOnueIrpj/A4Bl2fC8ZnZ4kiRGkiR3ObpUSqHX62M0HMH3698erzUA3OMX9FkopZAXOZL47fN/
        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
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERyfH/dyicpf16hnAAAAAASUVORK5CYII=
</value>
  </data>
</root>